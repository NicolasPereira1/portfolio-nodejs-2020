<!DOCTYPE html>
<html>
    <head>
        <title>Nicolas Pereira</title>
        <meta charset="utf-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
        <link rel="stylesheet" type="text/css" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" href="/style.css">
        <link rel="stylesheet" href="/timeline.css">
    </head>
    <header>
        <div id="Accueil"></div>
        <br>
        <br>
        <nav class="fixed-top navbar navbar-expand-lg">
            <h1 class="navbar-toggler" type="h1" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                MENU
            </h1>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <img class="navbar-toggler-icon" src="./images/Bouton de Nav.png" alt="Menu"> 
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav"> 
                    <!-- dropdown = liste -->
                    <a class="nav-item h5 active" href="/#Accueil">Accueil</a>
                    <a class="nav-item h5"  href="/#Formations">Formations</a>
                    <a class="nav-item h5"  href="/#Experiences">Expériences</a>
                    <a class="nav-item h5"  href="/#Realisations">Réalisations</a>
                    <a class="nav-item h5"  href="/#Centre_dinteret">Centre&nbspd'intêret</a>
                    <a class="nav-item h5"  href="/#Contact">Contact</a>
                </ul>
            </div>
        </nav>
    </header>
    <body onload="setup(), draw()" class="text-center">
        <br>
        <br>
        <h1 class="h1" id="score">Attention aux bombes &#128163;</h1>
        <br>
        <canvas id="canvas" height="470" width="470"></canvas>
        <script>
            let HAUTEUR  = 470;
            let LONGUEUR = 470;
            let TAUX_BOMBE = 0.1;
            let COTE = 20;


            let canvas = document.getElementById('canvas');
            let gc = canvas.getContext('2d');
            let plateau = new Array();
            let visible	 = new Array();
            let gameOver = false;
            
            function refresh(){
                location.reload();
            }

            function draw () {
                if(!gameOver){
                    drawBackground();
                    drawGrid();
                }
            }

            function setup() {
                for(let i = 0; i < (HAUTEUR-COTE)/(COTE+1); i++){
                    plateau [i] = new Array();
                    visible [i] = new Array();
                    for (let j = 0; j < (LONGUEUR-COTE)/(COTE+1); j++) {
                        if(Math.random() < TAUX_BOMBE)
                            plateau[i][j] = 'B';
                        visible[i][j]=false;
                    }
                }
                calculeBombeVoisine();

                canvas.addEventListener("click",function(e){
                    let x = parseInt((e.clientX-canvas.offsetLeft-10)/(COTE+1),10);
                    let y = parseInt((e.clientY- canvas.offsetTop-10)/(COTE+1),10);
                    retournerCase(x,y);
                    draw();
                    if(plateau[x][y] == 'B'){
                        alert("BOOOM !!!\nGame Over...");
                        gameOver = true;
                    }
                });
            }

            function drawBackground () {
                gc.fillStyle = "#333333";
                gc.fillRect(0,0, HAUTEUR, LONGUEUR);	
            }

            function drawGrid () {
                for(let i = 0; i < (HAUTEUR-COTE)/(COTE+1); i++){
                    for (let j = 0; j < (LONGUEUR-COTE)/(COTE+1); j++) {
                        if(plateau[i][j] == 'B'){
                            //Dessiner les bombes
                            gc.fillStyle = "#aa3333";
                            gc.fillRect(i*(COTE+1)+4,j*(COTE+1)+4,COTE,COTE);
                            gc.fillText(plateau[i][j], i*(COTE+1)+4+4,j*(COTE+1)+4+17);
                        } else {
                            //Nombre de plateau autour
                            gc.fillStyle = "#aaaaaa";	
                            gc.font = "20px Arial";
                            if(plateau[i][j] != 0)gc.fillText(""+plateau[i][j], i*(COTE+1)+4+4,j*(COTE+1)+4+17);
                        }
                        //Dessiner les cases
                        gc.fillStyle = "#aaaaaa";
                        if(!visible[i][j]) gc.fillRect(i*(COTE+1)+4,j*(COTE+1)+4,COTE,COTE);
                    }
                }
            }

            function calculeBombeVoisine () {
                calculeCoin();
                calculeLigneHautBas();
                calculeColonneGaucheDroite();
                calculeCentre();
            }

            function calculeCoin () {
                let nbrDeBombe = 0;

                //Coin en haut à droite
                if(plateau[0][1] == 'B') nbrDeBombe++;
                if(plateau[1][0] == 'B') nbrDeBombe++;
                if(plateau[1][1] == 'B') nbrDeBombe++;

                plateau[0][0] = nbrDeBombe;
                nbrDeBombe = 0;

                //Coin en haut à gauche
                if(plateau[[parseInt((LONGUEUR-COTE)/(COTE+1), 10)-1]][0] == 'B') nbrDeBombe++;
                if(plateau[[parseInt((LONGUEUR-COTE)/(COTE+1), 10)  ]][1] == 'B') nbrDeBombe++;
                if(plateau[[parseInt((LONGUEUR-COTE)/(COTE+1), 10)-1]][1] == 'B') nbrDeBombe++;

                plateau[[parseInt((LONGUEUR-COTE)/(COTE+1), 10)]][0] = nbrDeBombe;
                nbrDeBombe = 0;

                //Coin en bas à droite
                if(plateau[0][parseInt((HAUTEUR-COTE)/(COTE+1), 10)-1] == 'B') nbrDeBombe++;
                if(plateau[1][parseInt((HAUTEUR-COTE)/(COTE+1), 10)-1] == 'B') nbrDeBombe++;
                if(plateau[1][parseInt((HAUTEUR-COTE)/(COTE+1), 10)  ] == 'B') nbrDeBombe++;

                plateau[0][parseInt((HAUTEUR-COTE)/(COTE+1), 10)] = nbrDeBombe;
                nbrDeBombe = 0;

                //Coin en bas à gauche
                if(plateau[[parseInt((LONGUEUR-COTE)/(COTE+1), 10)-1]][parseInt((HAUTEUR-COTE)/(COTE+1), 10)  ] == 'B') nbrDeBombe++;
                if(plateau[[parseInt((LONGUEUR-COTE)/(COTE+1), 10)  ]][parseInt((HAUTEUR-COTE)/(COTE+1), 10)-1] == 'B') nbrDeBombe++;
                if(plateau[[parseInt((LONGUEUR-COTE)/(COTE+1), 10)-1]][parseInt((HAUTEUR-COTE)/(COTE+1), 10)-1] == 'B') nbrDeBombe++;

                plateau[[parseInt((LONGUEUR-COTE)/(COTE+1), 10)]][parseInt((HAUTEUR-COTE)/(COTE+1), 10)] = nbrDeBombe;
                nbrDeBombe = 0;
            }

            function calculeLigneHautBas () {
                let nbrDeBombe = 0;

                for(let i = 1; i < (LONGUEUR-COTE)/(COTE+1)-1; i++){
                    //Ligne Haut	
                    if(plateau[i][0] != 'B'){
                        if(plateau[i-1][1] == 'B') nbrDeBombe++;
                        if(plateau[i  ][1] == 'B') nbrDeBombe++;
                        if(plateau[i+1][1] == 'B') nbrDeBombe++;

                        if(plateau[i-1][0] == 'B') nbrDeBombe++;
                        if(plateau[i+1][0] == 'B') nbrDeBombe++;

                        plateau[i][0]= nbrDeBombe;
                        nbrDeBombe = 0;
                    }
                    //Ligne Bas
                    if(plateau[i][parseInt((LONGUEUR-COTE)/(COTE+1), 10)] != 'B'){
                        if(plateau[i-1][parseInt((LONGUEUR-COTE)/(COTE+1), 10)-1] == 'B') nbrDeBombe++;
                        if(plateau[i  ][parseInt((LONGUEUR-COTE)/(COTE+1), 10)-1] == 'B') nbrDeBombe++;
                        if(plateau[i+1][parseInt((LONGUEUR-COTE)/(COTE+1), 10)-1] == 'B') nbrDeBombe++;

                        if(plateau[i-1][parseInt((LONGUEUR-COTE)/(COTE+1), 10)  ] == 'B') nbrDeBombe++;
                        if(plateau[i+1][parseInt((LONGUEUR-COTE)/(COTE+1), 10)  ] == 'B') nbrDeBombe++;

                        plateau[i][parseInt((LONGUEUR-COTE)/(COTE+1), 10)]= nbrDeBombe;
                        nbrDeBombe = 0;
                    }
                }
            }

            function calculeColonneGaucheDroite () {
                let nbrDeBombe = 0;

                for(let j = 1; j < (HAUTEUR-COTE)/(COTE+1)-1; j++){
                    //Colone Gauche
                    if(plateau[0][j] != 'B'){
                        if(plateau[1][j-1] == 'B') nbrDeBombe++;
                        if(plateau[1][j  ] == 'B') nbrDeBombe++;
                        if(plateau[1][j+1] == 'B') nbrDeBombe++;

                        if(plateau[0][j-1] == 'B') nbrDeBombe++;
                        if(plateau[0][j+1] == 'B') nbrDeBombe++;

                        plateau[0][j]= nbrDeBombe;
                        nbrDeBombe = 0;
                    }
                    //Colone Droite
                    if(plateau[parseInt((HAUTEUR-COTE)/(COTE+1), 10)][j] != 'B'){
                        if(plateau[parseInt((HAUTEUR-COTE)/(COTE+1), 10)-1][j-1] == 'B') nbrDeBombe++;
                        if(plateau[parseInt((HAUTEUR-COTE)/(COTE+1), 10)-1][j  ] == 'B') nbrDeBombe++;
                        if(plateau[parseInt((HAUTEUR-COTE)/(COTE+1), 10)-1][j+1] == 'B') nbrDeBombe++;

                        if(plateau[parseInt((HAUTEUR-COTE)/(COTE+1), 10)  ][j-1] == 'B') nbrDeBombe++;
                        if(plateau[parseInt((HAUTEUR-COTE)/(COTE+1), 10)  ][j+1] == 'B') nbrDeBombe++;

                        plateau[parseInt((HAUTEUR-COTE)/(COTE+1), 10)][j]= nbrDeBombe;
                        nbrDeBombe = 0;
                    }
                }
            }

            function calculeCentre () {
                let nbrDeBombe = 0;
                for(let i = 1; i < (HAUTEUR-2*COTE)/(COTE+1); i++){
                    for (let j = 1; j < (LONGUEUR-2*COTE)/(COTE+1); j++) {
                        if(plateau[i][j] != 'B'){
                            if(plateau[i-1][j-1] == 'B') nbrDeBombe++;
                            if(plateau[i  ][j-1] == 'B') nbrDeBombe++;
                            if(plateau[i+1][j-1] == 'B') nbrDeBombe++;

                            if(plateau[i-1][j  ] == 'B') nbrDeBombe++;
                            if(plateau[i+1][j  ] == 'B') nbrDeBombe++;

                            if(plateau[i-1][j+1] == 'B') nbrDeBombe++;
                            if(plateau[i  ][j+1] == 'B') nbrDeBombe++;
                            if(plateau[i+1][j+1] == 'B') nbrDeBombe++;

                            plateau[i][j] = nbrDeBombe;
                            nbrDeBombe = 0;
                        }
                    }
                }
            }

            function retournerCase (x,y){
                visible[x][y] = true;

                if(plateau[x][y] == 0){
                    decouvrirAutour(x, y);
                }
            }

            function decouvrirAutour (x,y) {
                if(x-1>-1 && y-1 > -1 && x-1<parseInt((LONGUEUR-COTE)/(COTE+1), 10)+1&& y-1<parseInt((HAUTEUR-COTE)/(COTE+1), 10)+1&& !visible[x-1][y-1])retournerCase (x-1,y-1);
                if(x  >-1 && y-1 > -1 && x  <parseInt((LONGUEUR-COTE)/(COTE+1), 10)+1&& y-1<parseInt((HAUTEUR-COTE)/(COTE+1), 10)+1&& !visible[x  ][y-1])retournerCase (x,y-1);
                if(x+1>-1 && y-1 > -1 && x+1<parseInt((LONGUEUR-COTE)/(COTE+1), 10)+1&& y-1<parseInt((HAUTEUR-COTE)/(COTE+1), 10)+1&& !visible[x+1][y-1])retournerCase (x+1,y-1);

                if(x-1>-1 && y   > -1 && x-1<parseInt((LONGUEUR-COTE)/(COTE+1), 10)+1&& y  <parseInt((HAUTEUR-COTE)/(COTE+1), 10)+1&& !visible[x-1][y  ])retournerCase (x-1,y);
                if(x+1>-1 && y   > -1 && x+1<parseInt((LONGUEUR-COTE)/(COTE+1), 10)+1&& y  <parseInt((HAUTEUR-COTE)/(COTE+1), 10)+1&& !visible[x+1][y  ])retournerCase (x+1,y);

                if(x-1>-1 && y+1 > -1 && x-1<parseInt((LONGUEUR-COTE)/(COTE+1), 10)+1&& y+1<parseInt((HAUTEUR-COTE)/(COTE+1), 10)+1&& !visible[x-1][y+1])retournerCase (x-1,y+1);
                if(x  >-1 && y+1 > -1 && x  <parseInt((LONGUEUR-COTE)/(COTE+1), 10)+1&& y+1<parseInt((HAUTEUR-COTE)/(COTE+1), 10)+1&& !visible[x  ][y+1])retournerCase (x,y+1);
                if(x+1>-1 && y+1 > -1 && x+1<parseInt((LONGUEUR-COTE)/(COTE+1), 10)+1&& y+1<parseInt((HAUTEUR-COTE)/(COTE+1), 10)+1&& !visible[x+1][y+1])retournerCase (x+1,y+1);
            }
        </script>
        <br>
        <button class="btn btn-dark" onclick="refresh()">Recommencer</button>
        <br>
        <br>
        
        <section class="text-left section3">
            <br>
            <div class="container">
                <div class="row">
                    <div class="col-sm">
                        <h3 class="gras">Contact</h3>
                        <span class="gras">Adresse e-mail</span>
                        <p>Nicolas_pereira27@hotmail.com</p>
                        <span class="gras">Téléphone</span>
                        <p>07 67 55 83 71</p>
                        <br>
                    </div>
                    <div class="col-sm">
                        <h3 class="gras">À propos</h3>
                        <p>Actuellement étudiant en Master MIAGE à l'université de Lille.</p>
                        <p>Je suis à la recherche d'un contrat d'alternance qui me permetterais de me former au métier de Développeur Web durant ma deuxième année de master.</p>
                        <p>Sur la métropole Lilloise.</p>
                        <br>
                    </div>
                    <div class="col-sm">
                        <h3 class="gras">Resaux sociaux</h3>
                        <br>
                        <a href="https://github.com/NicolasPereira1" class="btn">
                            <img src="./images/github.png" alt="github" width="50px"> 
                        </a>
                        <a href="https://www.linkedin.com/in/nicolas-pereira-lille/" class="btn">
                            <img src="./images/linkedin.png" alt="linkedin" width="50px"> 
                        </a>
                        <a href="https://www.facebook.com/nicolas.pereira.58173000/" class="btn">
                            <img src="./images/facebook.png" alt="facebook" width="50px"> 
                        </a>
                        <a href="https://www.instagram.com/nicolas._.pr/" class="btn">
                            <img src="./images/instagram.png" alt="instagram" width="50px"> 
                        </a>
                        <br><br>
                    </div>
                </div>
              </div>
        </section>
        <script src="https://smtpjs.com/v3/smtp.js"></script>
        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
    </body>
    <footer>
        <br>
        <p class="text-sm-centre"><span class="gras">© 2020</span> - Nicolas PEREIRA</p>
        <img src="./images/node.png" alt="instagram" width="100px">
        <br>
        <br>
    </footer>
   
</html>
